// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/igkostyuk/film/internal/film/delivery/http (interfaces: FilmUsecase)

// Package mocks_usecase is a generated GoMock package.
package mocks_usecase

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/igkostyuk/film/internal/models"
)

// MockFilmUsecase is a mock of FilmUsecase interface.
type MockFilmUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockFilmUsecaseMockRecorder
}

// MockFilmUsecaseMockRecorder is the mock recorder for MockFilmUsecase.
type MockFilmUsecaseMockRecorder struct {
	mock *MockFilmUsecase
}

// NewMockFilmUsecase creates a new mock instance.
func NewMockFilmUsecase(ctrl *gomock.Controller) *MockFilmUsecase {
	mock := &MockFilmUsecase{ctrl: ctrl}
	mock.recorder = &MockFilmUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFilmUsecase) EXPECT() *MockFilmUsecaseMockRecorder {
	return m.recorder
}

// GetByTitle mocks base method.
func (m *MockFilmUsecase) GetByTitle(arg0 context.Context, arg1 string) (*models.Film, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByTitle", arg0, arg1)
	ret0, _ := ret[0].(*models.Film)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByTitle indicates an expected call of GetByTitle.
func (mr *MockFilmUsecaseMockRecorder) GetByTitle(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByTitle", reflect.TypeOf((*MockFilmUsecase)(nil).GetByTitle), arg0, arg1)
}

// GetKeysTTL mocks base method.
func (m *MockFilmUsecase) GetKeysTTL(arg0 context.Context) (map[string]models.Title, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKeysTTL", arg0)
	ret0, _ := ret[0].(map[string]models.Title)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetKeysTTL indicates an expected call of GetKeysTTL.
func (mr *MockFilmUsecaseMockRecorder) GetKeysTTL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKeysTTL", reflect.TypeOf((*MockFilmUsecase)(nil).GetKeysTTL), arg0)
}
